<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security.xsd">


	<http pattern="/info.jsp" security="none" />
	<http pattern="/test" security="none" />
	<http pattern="/test/**" security="none" />
	<http pattern="/resources/**" security="none" />
	<http pattern="/favicon.ico" security="none" />
	<http pattern="/**/*.html" security="none" />


	<http auto-config="false" use-expressions="true" disable-url-rewriting="true" entry-point-ref="loginUrlAuthenticationEntryPoint">
		<intercept-url pattern="/login/accessDenied" 			access="permitAll" 		requires-channel="http"/><!-- org.ezdevgroup.ezframework.security.web.EzSecurityControllerAdvice.ACCESS_DENIED -->
		<intercept-url pattern="/login/isNotAuthentication"		access="permitAll" 		requires-channel="http"/><!-- org.ezdevgroup.ezframework.security.web.EzSecurityControllerAdvice.IS_NOT_AUTHENTICATION -->
		<intercept-url pattern="/login/authenticationFailure"	access="permitAll" 		requires-channel="http"/><!-- org.ezdevgroup.ezframework.security.web.EzSecurityControllerAdvice.AUTHENTICATION_FAILURE -->

		<intercept-url pattern="${page.login.form.url}" 		access="permitAll" 		requires-channel="${page.ssl.channel}"/>
		<intercept-url pattern="/" 								access="permitAll" 		requires-channel="http"/>
		<intercept-url pattern="${page.login.success.url}" 		access="authenticated" 	requires-channel="http"/>

		<!-- <form-login login-page="${page.login.form.url}" />	커스텀 인증 -->
		<form-login login-page="${page.login.form.url}"
					login-processing-url="${page.login.url}"
					username-parameter="userId"
					password-parameter="userPwd"
					always-use-default-target="true"
					authentication-failure-url="/authenticationFailure" />
		<logout logout-url="${page.logout.url}" logout-success-url="${page.logout.success.url}" />
		<access-denied-handler ref="ezAccessDeniedHandler" />


		<!-- 이중 로그인 관리 -->
		<!-- <session-management invalid-session-url="${page.login.form.url}" session-fixation-protection="none">
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" expired-url="${page.login.form.url}" />
		</session-management> -->

		<custom-filter position="BASIC_AUTH_FILTER"  ref="basicAuthenticationFilter" />
		<!-- <custom-filter after="FORM_LOGIN_FILTER" ref="ezUsernamePasswordAuthenticationFilter" /> -->
		<custom-filter after="FILTER_SECURITY_INTERCEPTOR" ref="ezSecurityInterceptor" />

	</http>

	<beans:bean id="loginUrlAuthenticationEntryPoint" class="org.ezdevgroup.ezframework.security.web.authentication.EzLoginUrlAuthenticationEntryPoint">
		<beans:constructor-arg name="loginFormUrl" value="${page.login.form.url}" />
	</beans:bean>

	<beans:bean id="basicAuthenticationFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
		<beans:property name="authenticationManager" ref="ezAuthenticationManager" />
        <beans:property name="authenticationEntryPoint" ref="loginUrlAuthenticationEntryPoint" />
	</beans:bean>

	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

	<authentication-manager alias="ezAuthenticationManager">
		<authentication-provider user-service-ref="ezUserDetailsService">
			<!-- <password-encoder ref="passwordEncoder" /> -->
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="${page.login.form.url}?success=false"/>
	</beans:bean>
	<beans:bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="${page.login.success.url}"/>
	</beans:bean>


	<beans:bean id="ezAccessDeniedHandler" class="org.ezdevgroup.ezframework.security.access.EzAccessDeniedHandler">
		<beans:property name="redirectPage" value="${page.accessDenied.url}" />
	</beans:bean>

	<beans:bean id="ezSecurityInterceptor" class="org.ezdevgroup.ezframework.security.access.interceptor.EzSecurityInterceptor">
		<beans:property name="authenticationManager" ref="ezAuthenticationManager" />
		<beans:property name="accessDecisionManager" ref="ezAccessDescisionManager" />
		<beans:property name="securityMetadataSource" ref="ezSecurityMetadataSource" />
	</beans:bean>

	<!--
		커스텀 인증
			- id/pwd 이외 데이터를 처리 하고 싶을때
	<beans:bean id="ezUsernamePasswordAuthenticationFilter" class="org.ezdevgroup.ezframework.security.web.filter.EzUsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="ezAuthenticationManager" />
        <beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
        <beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
        <beans:property name="filterProcessesUrl" value="${page.login.url}" />
        <beans:property name="postOnly" value="true" />
		<beans:property name="usernameParameter" value="userId" />
		<beans:property name="passwordParameter" value="userPwd" />
	</beans:bean> -->


	<!-- <beans:bean id="ezUserDetailsService" class="org.ezdevgroup.sangdam4u.common.security.Ez4uUserDetailsServiceImpl">	커스텀 인증 -->
	<beans:bean id="ezUserDetailsService" class="org.ezdevgroup.ezframework.security.EzUserDetailsServiceImpl">
		<beans:property name="dataSource" 		ref="dataSource" />
		<beans:property name="userQuery" 		value="SELECT
															USER_ID, USER_NM, USER_TYPE, USER_PWD, USE_YN, 1 AS ENABLED
														FROM EZ_USER
		                                                WHERE CONCAT(USER_ID, USER_TYPE) = ?"/>
		<beans:property name="authoritiesQuery" value="SELECT IFNULL((SELECT AUTH_CD
														   FROM ACL_USER_AUTH
														   WHERE USER_AUTH_KEY = ?), 'ROLE_USER')
														FROM (VALUES(0))"/>


	   	<beans:property name="roleHierarchy" ref="roleHierarchy"/>
	   	<beans:property name="mapClass" value="org.ezdevgroup.sample.security.SessionMapping"/>
	   	<!-- <beans:property name="ipCheckDomains">
			<beans:array>
				<beans:value>api</beans:value>
			</beans:array>
	   	</beans:property>
	   	<beans:property name="ipCheckQuery" value="SELECT IP FROM ACL_USER_IP" /> -->
	</beans:bean>


	<beans:bean id="ezSecurityMetadataSource" class="org.ezdevgroup.ezframework.security.access.interceptor.EzSecurityMetadataSource">
		<beans:constructor-arg name="ezAuthService" ref="ezAuthService"></beans:constructor-arg>
		<beans:constructor-arg name="ezResourceService" ref="ezResourceService"></beans:constructor-arg>
	</beans:bean>

	<beans:bean id="ezAccessDescisionManager" class="org.ezdevgroup.ezframework.security.access.EzAccessDescisionManager" />


	<beans:bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<beans:property name="hierarchy" ref="hierarchyStrings" />
	</beans:bean>


	<beans:bean id="hierarchyStrings" class="org.ezdevgroup.ezframework.security.hierarchicalroles.EzHierarchyStringsFactoryBean" init-method="init">
		<beans:property name="ezAuthService" ref="ezAuthService" />
	</beans:bean>

	<beans:bean id="ezAuthService" class="org.ezdevgroup.ezframework.security.service.EzAuthServiceImpl">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="totalAuthsQuery" value="SELECT AUTH_CD
													  FROM ACL_AUTH"/><!-- 필드 무조건 한개 -->
		<beans:property name="authHierarchyQuery" value="SELECT CONCAT(PARENT_AUTH_CD, ' > ', CHILD_AUTH_CD)
														 FROM ACL_AUTH_HIERARCHY"/>
	</beans:bean>

	<beans:bean id="ezResourceService" class="org.ezdevgroup.ezframework.security.service.EzResourceServiceImpl">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="authResourceUrlQuery" value="SELECT RESOURCE_URL
														   FROM ACL_RESOURCE R, ACL_AUTH_RESOURCE AR
														   WHERE R.RESOURCE_CD = AR.RESOURCE_CD
														   AND r.RESOURCE_URL != '/**'
														   AND AUTH_CD = ?"/><!-- 필드 무조건 한개 -->
	</beans:bean>


</beans:beans>